name: release

on:
  push:
    tags: ["v*"]   # run only for version tags

permissions:
  contents: write  # needed for uploading release assets

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # --------- linux ----------
          - goos: linux     # x86_64
            goarch: amd64
            ext: ""
            archive: tar.gz
          - goos: linux     # arm64
            goarch: arm64
            ext: ""
            archive: tar.gz
          # --------- macOS ----------
          - goos: darwin
            goarch: amd64   # intel
            ext: ""
            archive: tar.gz
          - goos: darwin
            goarch: arm64   # apple silicon
            ext: ""
            archive: tar.gz
          # --------- windows --------
          - goos: windows
            goarch: amd64   # x86_64
            ext: .exe
            archive: zip
          - goos: windows   # arm64
            goarch: arm64
            ext: .exe
            archive: zip
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Build
        env:
          CGO_ENABLED: 0
          GOOS:   ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          out="ghostpost${{ matrix.ext }}"
          dir="ghostpost-${GOOS}-${GOARCH}"
          mkdir -p "$dir"
          go build -ldflags="-s -w" -o "$dir/$out" ./cmd/ghostpost
          # compress
          if [ "${{ matrix.archive }}" = "zip" ]; then
            zip -r "${dir}.zip" "$dir"
          else
            tar -czf "${dir}.tar.gz" "$dir"
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ghostpost-${{ matrix.goos }}-${{ matrix.goarch }}
          path: ghostpost-${{ matrix.goos }}-${{ matrix.goarch }}*.${{ matrix.archive }}

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/

      - name: Draft GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          draft: false           # publish immediately
          prerelease: false
          files: |
            dist/**/*
